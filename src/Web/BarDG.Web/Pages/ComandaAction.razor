@page "/Comanda/{comandaId:int}"

@using BlazorStrap
@using BarDG.Web.Data
@inject ComandaData _comandaData
@inject ProdutoData _produtoData
@inject NavigationManager naviManager

<div class="row">
    <div class="col-11">
        <h1>Comandas @comandaId</h1>
    </div>
    <div class="col-1 offset-11 align-items-end">
        <button class="btn btn-danger" type="button" @onclick="ResetComanda">Reset</button>
    </div>
</div>


@if (produtos == null || comanda == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-5">
                <div class="form-group">
                    <label class="form-text">Selecione o produto para adicionar na comanda</label>
                    <select @bind="ProdutoSelect" class="form-control">
                        @foreach (var produto in produtos)
                        {
                            <option value=@produto.Id>@produto.Descricao</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-5">

                <label class="form-text">  &nbsp </label>
                <button class="form-control" type="button" @onclick="AddProduto">Adicionar Produto</button>
            </div>
        </div>
        <div class="row">
            <table class="table">
                <thead>
                    <tr>
                        <th>Produto</th>
                        <th>Quantidade</th>
                        <th>Valor</th>
                        <th>Desconto</th>
                        <th>Valor com Desconto</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in comanda.Itens)
                    {
                        <tr>
                            <td>@item.Produto.Descricao</td>
                            <td>@item.Quantidade</td>
                            <td>@item.Produto.Valor.ToString("C") </td>
                            <td>@item.Desconto.ToString("C") </td>
                            <td>@item.ValorTotal.ToString("C") </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                <td></td>
                <td></td>
                <td></td>
                <td>Valor Total</td>
                <td>@comanda.Itens.Sum(x => x.ValorTotal).ToString("C") </td>
                </tfoot>
            </table>
        </div>
        <div class="row">
            <div class="col-md-3 offset-md-9 align-self-end">
                <button class="form-control" type="button" @onclick="FecharComanda">Fechar Comanda</button>
            </div>
        </div>
    </div>


}

<BSModal @ref="LimiteDeCompraModal">
    <BSModalBody><p>Limite de compra atingido.</p></BSModalBody>
    <BSModalFooter>

        <BSButton Color="Color.Secondary" @onclick="@(() => LimiteDeCompraModal.Hide())">Fechar</BSButton>

    </BSModalFooter>

</BSModal>
@code {

    [Parameter]
    public int comandaId { get; set; }

    public BarDG.Domain.Entity.Comanda comanda { get; set; }
    public BarDG.Domain.Entity.Produto[] produtos { get; set; }

    public int ProdutoSelect { get; set; }

    protected override async Task OnInitializedAsync()
    {
        produtos = await _produtoData.GetAllProdutos();
        comanda = await _comandaData.GetComanda(comandaId);
    }

    BlazorStrap.BSModal LimiteDeCompraModal { get; set; }

    private async void AddProduto()
    {
        var prod = comanda.Itens.SingleOrDefault(x => x.Produto.Id == ProdutoSelect);
        if (prod == null || prod.Produto.CompraMaxima == 0 || prod.Quantidade < prod.Produto.CompraMaxima)
        {
            comanda = await _comandaData.AddProduto(comandaId, ProdutoSelect);
            StateHasChanged();
        }
        else
        {
            LimiteDeCompraModal.Show();
        }
    }
    private async void ResetComanda()
    {

        comanda = await _comandaData.ResetComanda(comandaId);

        StateHasChanged();
    }
    private async void FecharComanda()
    {

        var nota = await _comandaData.FacharComanda(comandaId);
        naviManager.NavigateTo($"/NotaFiscal/{nota.Id}");
    }
}
