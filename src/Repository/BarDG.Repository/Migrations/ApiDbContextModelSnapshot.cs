// <auto-generated />
using System;
using BarDG.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarDG.Repository.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("BarDG.Domain.Entity.Comanda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("BarDG.Domain.Entity.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ComandaId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("NotaFiscalId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComandaId");

                    b.HasIndex("NotaFiscalId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("BarDG.Domain.Entity.NotaFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NotaFiscais");
                });

            modelBuilder.Entity("BarDG.Domain.Entity.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fb45d9f-439f-40e5-952d-dc771dacb6a7"),
                            Descricao = "Cerveja",
                            Valor = 5m
                        },
                        new
                        {
                            Id = new Guid("905c8d80-dc0e-4fe8-96a2-c32dec8ef8c9"),
                            Descricao = "Conhaque",
                            Valor = 20m
                        },
                        new
                        {
                            Id = new Guid("c6835d63-fba6-4bc6-8946-8d43584e1687"),
                            Descricao = "Suco",
                            Valor = 50m
                        },
                        new
                        {
                            Id = new Guid("f5994248-a160-4c37-875f-5753aa2833ec"),
                            Descricao = "Água",
                            Valor = 70m
                        });
                });

            modelBuilder.Entity("BarDG.Domain.Entity.Item", b =>
                {
                    b.HasOne("BarDG.Domain.Entity.Comanda", null)
                        .WithMany("Itens")
                        .HasForeignKey("ComandaId");

                    b.HasOne("BarDG.Domain.Entity.NotaFiscal", null)
                        .WithMany("Itens")
                        .HasForeignKey("NotaFiscalId");

                    b.HasOne("BarDG.Domain.Entity.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");
                });
#pragma warning restore 612, 618
        }
    }
}
